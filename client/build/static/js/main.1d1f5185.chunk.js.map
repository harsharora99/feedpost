{"version":3,"sources":["components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["layout","props","react_default","a","createElement","react","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","concat","Object","toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","to","exact","onChoose","onLogout","mainNavigation","MobileToggle_MobileToggle","onOpenMobileNav","Logo_Logo","NavigationItems_NavigationItems","mobileNavigation","onChooseItem","button","Link","design","mode","disabled","loading","type","modal","title","Button_Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","Backdrop_Backdrop","onHandle","Modal_Modal","message","post","author","date","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","err","readAsDataURL","POST_FORM","validators","content","FeedEdit","state","postForm","formIsValid","imagePreview","postInputChangeHandler","then","b64","_this","setState","catch","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","f","updatedForm","objectSpread","defineProperty","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","onFinishEdit","prevProps","this","editing","selectedPost","imagePath","Input_Input","bind","FilePicker","Image_Image","Component","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","addPost","updatedPosts","pop","unshift","updatePost","updatedPostIndex","findIndex","p","_id","loadPosts","direction","page","fetch","headers","Authorization","token","res","Error","json","resData","totalItems","catchError","statusUpdateHandler","event","preventDefault","method","Content-Type","body","JSON","stringify","console","log","newPostHandler","startEditPostHandler","postId","find","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","url","statusInputChangeHandler","deletePostHandler","_this2","openSocket","on","data","action","_this3","ErrorHandler","Feed_FeedEdit_FeedEdit","onSubmit","textAlign","marginTop","Loader_Loader","Paginator_Paginator","Math","ceil","Post_Post","creator","name","Date","createdAt","toLocaleDateString","SinglePost","match","params","Login","loginForm","password","inputChangeHandler","Login_createForOfIteratorHelper","Auth_Auth","onLogin","Signup","signupForm","Signup_createForOfIteratorHelper","onSignup","App","showBackdrop","showMobileNav","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","setItem","expiryDate","getTime","toISOString","setAutoLogout","signupHandler","history","replace","milliseconds","setTimeout","getItem","remainingMilliseconds","routes","Switch","Route","path","render","Auth_Login","assign","Auth_Signup","Redirect","pages_Feed_Feed","Feed_SinglePost_SinglePost","Layout_Layout","Toolbar_Toolbar","MainNavigation_MainNavigation","MobileNavigation_MobileNavigation","withRouter","BrowserRouter","src_App_0"],"mappings":"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","file":"static/js/main.1d1f5185.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from 'react';\nimport openSocket from 'socket.io-client' //this function lets us connect client to the backend server using websocket protocol\n\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    fetch('/auth/status', {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }\n    })\n      .then(res => {\n        console.log(res.status);\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n    const socket = openSocket(''); //url of server where we install a socketio server (backend server address)\n    //we do use http here as websocket are built on http\n    socket.on('posts', data => {\n      if (data.action === 'create') {\n        this.addPost(data.post);\n      } else if (data.action === 'update') {\n        this.updatePost(data.post);\n      } else if (data.action === 'delete') {\n        this.loadPosts();\n      }\n    })\n  }\n\n  addPost = post => {\n    this.setState(prevState => {\n        const updatedPosts = [...prevState.posts];\n        if (prevState.postPage === 1) {\n          if (prevState.posts.length >= 2) {\n            updatedPosts.pop();\n          }\n          updatedPosts.unshift(post);\n        }\n        return {\n          posts: updatedPosts,\n          totalPosts: prevState.totalPosts + 1\n        };\n    });\n\n  }\n\n  updatePost = post => {\n     this.setState(prevState => {\n      const updatedPosts = [...prevState.posts];\n      const updatedPostIndex = updatedPosts.findIndex(p => p._id === post._id);\n      if (updatedPostIndex > -1) {\n        updatedPosts[updatedPostIndex] = post;\n      }\n      return {\n        posts: updatedPosts\n      };\n    });\n  }\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    fetch('/feed/posts?page=' + page, {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token //using Authorization field and adding 'Bearer' to the token is a convention to pass JWT token in request to the backend server\n      }\n    })\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({\n          posts: resData.posts.map(post => {\n            return {\n              ...post,\n              imagePath: post.imageUrl //does not include domain name i.e. does not include http://localhost:8080 (this url is used when editting a post (in FeedEdit file)\n            }\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    fetch('/auth/status', {\n      method: 'PATCH',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type' : 'application/json'\n      },\n      body: JSON.stringify({\n        status: this.state.status\n      })\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n\n    // Set up data (with image!)\n    const formData = new FormData(); //a builtin object\n    formData.append('title', postData.title); //key-value pair\n    formData.append('content', postData.content);\n    formData.append('image', postData.image); //postData.image is a file \n    let url = '/feed/post';\n    console.log('hey');\n    let method = 'POST';\n    if (this.state.editPost) {\n      console.log('hello');\n      url = '/feed/post/' + this.state.editPost._id;\n      method = 'PUT';\n    }\n\n    fetch(url, {\n      method: method,\n      // headers: {\n      //   'Content-Type': 'application/json' //tells the server that the request contains JSON data\n      // },\n      // body: JSON.stringify({\n      //   title: postData.title,\n      //   content: postData.content\n      // })\n      headers: {\n        Authorization: 'Bearer ' + this.props.token //using Authorization field and adding 'Bearer' to the token is a convention to pass JWT token in request to the backend server\n      },\n\n      body: formData //as we have to send both text and file in request, we need to send it as formData \n      //setting body to formData will automatically lead to setting req header content type to the required values.\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.post.imageUrl);\n        // const post = {\n        //   _id: resData.post._id,\n        //   title: resData.post.title,\n        //   imagePath: resData.post.imageUrl,\n        //   content: resData.post.content,\n        //   creator: resData.post.creator,\n        //   createdAt: resData.post.createdAt\n        // };\n        this.setState(prevState => {\n          // let updatedPosts = [...prevState.posts];\n          // if (prevState.editPost) {\n          //   const postIndex = prevState.posts.findIndex(\n          //     p => p._id === prevState.editPost._id\n          //   );\n          //   updatedPosts[postIndex] = post;\n          // }\n          // else if (prevState.posts.length < 2) {\n          //   updatedPosts = prevState.posts.concat(post);\n          // }\n          return {\n            //posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    fetch('/feed/post/' + postId, {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token //using Authorization field and adding 'Bearer' to the token is a convention to pass JWT token in request to the backend server\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.loadPosts(); //redundant\n        // this.setState(prevState => {\n        //   const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    fetch('/feed/post/' + postId, {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token //using Authorization field and adding 'Bearer' to the token is a convention to pass JWT token in request to the backend server\n      }\n    })\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch status');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.post.imageUrl);\n        \n        // let tempImage = resData.post.imageUrl.split('\\\\');\n        // tempImage = tempImage[0] + '/' + tempImage[1];\n        // console.log('/' + tempImage);\n        this.setState({\n          title: resData.post.title,\n          author: resData.post.creator.name,\n          image: resData.post.imageUrl,\n          date: new Date(resData.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.post.content\n        });\n        \n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\nimport LoginPage from './pages/Auth/Login';\nimport SignupPage from './pages/Auth/Signup';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  mobileNavHandler = isOpen => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false, token: null });\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n  };\n\n  loginHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    fetch('/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: authData.email,\n        password: authData.password\n      })\n    })\n      .then(res => {\n        if (res.status === 422) {\n          throw new Error('Validation failed.');\n        }\n        if (res.status !== 200 && res.status !== 201) {\n          console.log('Error!');\n          throw new Error('Could not authenticate you!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({\n          isAuth: true,\n          token: resData.token,\n          authLoading: false,\n          userId: resData.userId\n        });\n        localStorage.setItem('token', resData.token);\n        localStorage.setItem('userId', resData.userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  signupHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    fetch('/auth/signup', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: authData.signupForm.email.value,\n        password: authData.signupForm.password.value,\n        name: authData.signupForm.name.value\n      })\n    })\n      .then(res => {\n        if (res.status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (res.status !== 200 && res.status !== 201) {\n          console.log('Error!');\n          throw new Error('Creating a user failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace('/');\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => (\n            <LoginPage\n              {...props}\n              onLogin={this.loginHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/signup\"\n          exact\n          render={props => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={props => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}